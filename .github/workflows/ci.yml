name: CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

env:
  NODE_VERSION: 20
  EXPO_NO_TELEMETRY: 1
  CI: true

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci || npm install
      - name: Lint
        run: npm run lint
      - name: Typecheck
        run: npm run typecheck
      - name: Tests w/ Coverage
        run: npm test -- --ci --coverage --maxWorkers=50%
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: Upload coverage to Codecov
        if: success() && hashFiles('coverage/lcov.info') != ''
        uses: codecov/codecov-action@v4
        with:
          files: coverage/lcov.info
          fail_ci_if_error: false
  dependency-audit:
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci || npm install
      - name: Production audit (non-blocking)
        run: npm audit --omit=dev --audit-level=high || echo "Audit issues (non-blocking)"
  danger:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci || npm install
      - name: Run Danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run danger:ci || echo "Danger finished with warnings"

